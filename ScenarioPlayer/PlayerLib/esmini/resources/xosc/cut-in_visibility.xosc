<?xml version="1.0" encoding="UTF-8"?>

<!-- Demonstrate the VisibilityAction during a cut-in event -->
<!-- A red car will overtake and then cut in in front of a white car. The white car have sensors mounted.  -->
<!-- Initially the red car is detected by the sensors. But then the red car becames invisible for sensors. -->
<!-- Then the red car is becoming visible for sensors again, but invisible for graphics. So it will then   -->
<!-- disappear from the view. Finally the red car becomes visible for both sensors and graphics again.     -->
<!-- then handing over to the user to drive interactivelly for a while, then finally take control          -->
<!-- again with some improved performance (less sloppiness).                                               -->
<!-- time  0.0: Red car visible for both sensors and graphics                                              -->
<!-- time  4.0: Red car invisible for sensors, visible for graphics                                        -->
<!-- time  7.0: Red car visible for sensors, invisible for graphics                                        -->
<!-- time 10.0: Red car visible for both sensors and graphics                                              -->

<OpenSCENARIO>
   <FileHeader revMajor="1"
               revMinor="0"
               date="2020-10-09T10:00:00"
               description="Basic cut-in with interactive controller"
               author="esmini-team"/>
   <ParameterDeclarations>
      <ParameterDeclaration name="HostVehicle" parameterType="string" value="car_white"/>
      <ParameterDeclaration name="TargetVehicle" parameterType="string" value="car_red"/>
      <ParameterDeclaration name="EgoStartS" parameterType="double" value="50"/>
      <ParameterDeclaration name="HeadwayTime_LaneChange" parameterType="double" value="0.4"/>
      <ParameterDeclaration name="HeadwayTime_Brake" parameterType="double" value="0.7"/>
   </ParameterDeclarations>
   <CatalogLocations>
      <VehicleCatalog>
         <Directory path="../xosc/Catalogs/Vehicles"/>
      </VehicleCatalog>
   </CatalogLocations>
   <RoadNetwork>
      <LogicFile filepath="../xodr/e6mini.xodr"/>
      <SceneGraphFile filepath="../models/e6mini.osgb"/>
   </RoadNetwork>
   <Entities>
      <ScenarioObject name="Ego">
        <CatalogReference catalogName="VehicleCatalog" entryName="$HostVehicle"/>
      </ScenarioObject>
      <ScenarioObject name="OverTaker">
         <CatalogReference catalogName="VehicleCatalog" entryName="$TargetVehicle"/>
      </ScenarioObject>
   </Entities>
   <Storyboard>
      <Init>
         <Actions>
            <Private entityRef="Ego">
               <PrivateAction>
                  <TeleportAction>
                     <Position>
                        <LanePosition roadId="0" laneId="-3" offset="0" s="$EgoStartS"/>
                     </Position>
                  </TeleportAction>
               </PrivateAction>
               <PrivateAction>
                  <LongitudinalAction>
                     <SpeedAction>
                        <SpeedActionDynamics dynamicsShape="step" dynamicsDimension="time" />
                        <SpeedActionTarget>
                           <AbsoluteTargetSpeed value="30"/>
                        </SpeedActionTarget>
                     </SpeedAction>
                  </LongitudinalAction>
               </PrivateAction>
            </Private>
            <Private entityRef="OverTaker">
               <PrivateAction>
                  <TeleportAction>
                     <Position>
                        <LanePosition roadId="0" laneId="-2" offset="0" s="25"/>
                     </Position>
                  </TeleportAction>
               </PrivateAction>
            </Private>
         </Actions>
      </Init>
      <Story name="CutInAndBrakeStory">
         <ParameterDeclarations>
            <ParameterDeclaration parameterType="string" name="owner" value="OverTaker"/>
         </ParameterDeclarations>
         <Act name="CutInAndBrakeAct">
            <ManeuverGroup maximumExecutionCount="1" name="CutInAndBrakeSequence">
               <Actors selectTriggeringEntities="false">
                  <EntityRef entityRef="$owner"/>
               </Actors>
               <Maneuver name="CutInManeuver">
                  <Event name="OverTakerStartSpeedEvent" priority="overwrite">
                     <Action name="OverTakerStartSpeedAction">
                        <PrivateAction>
                           <LongitudinalAction>
                              <SpeedAction>
                                 <SpeedActionDynamics dynamicsShape="step" value="0.0" dynamicsDimension="time" />
                                 <SpeedActionTarget>
                                    <RelativeTargetSpeed entityRef="Ego"
                                                         value="1.2"
                                                         speedTargetValueType="factor"
                                                         continuous="true"/>
                                 </SpeedActionTarget>
                              </SpeedAction>
                           </LongitudinalAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="OverTakerStartSpeedCondition"
                                      delay="0"
                                      conditionEdge="none">
                              <ByValueCondition>
                                 <StoryboardElementStateCondition storyboardElementType="act"
                                                                  storyboardElementRef="CutInAndBrakeAct"
                                                                  state="startTransition"/>
                              </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="CutInEvent" priority="overwrite">
                     <Action name="CutInAction">
                        <PrivateAction>
                           <LateralAction>
                              <LaneChangeAction>
                                 <LaneChangeActionDynamics dynamicsShape="sinusoidal" value="3" dynamicsDimension="time"/>
                                 <LaneChangeTarget>
                                    <RelativeTargetLane entityRef="Ego" value="0"/>
                                 </LaneChangeTarget>
                              </LaneChangeAction>
                           </LateralAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="CutInStartCondition" delay="0" conditionEdge="rising">
                              <ByEntityCondition>
                                 <TriggeringEntities triggeringEntitiesRule="any">
                                    <EntityRef entityRef="Ego"/>
                                 </TriggeringEntities>
                                 <EntityCondition>
                                    <TimeHeadwayCondition entityRef="$owner"
                                                          value="$HeadwayTime_LaneChange"
                                                          freespace="true"
                                                          alongRoute="true"
                                                          rule="greaterThan"/>
                                 </EntityCondition>
                              </ByEntityCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="OvertakerBrakeEvent" priority="parallel">
                     <Action name="OvertakerBrakeAction">
                        <PrivateAction>
                           <LongitudinalAction>
                              <SpeedAction>
                                 <SpeedActionDynamics dynamicsShape="linear" value="-4" dynamicsDimension="rate"/>
                                 <SpeedActionTarget>
                                    <AbsoluteTargetSpeed value="0"/>
                                 </SpeedActionTarget>
                              </SpeedAction>
                           </LongitudinalAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="BrakeCondition" delay="0" conditionEdge="rising">
                              <ByEntityCondition>
                                 <TriggeringEntities triggeringEntitiesRule="any">
                                    <EntityRef entityRef="Ego"/>
                                 </TriggeringEntities>
                                 <EntityCondition>
                                    <TimeHeadwayCondition entityRef="$owner"
                                                          value="$HeadwayTime_Brake"
                                                          freespace="true"
                                                          alongRoute="true"
                                                          rule="greaterThan"/>
                                 </EntityCondition>
                              </ByEntityCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="VisibilityHideForSensorsEvent" priority="parallel">
                     <Action name="VisibilityHideForSensorsAction">
                        <PrivateAction>
                           <VisibilityAction sensors="false" />
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="VisibilityHideForSensorsCondition" delay="0.0" conditionEdge="rising">
                               <ByValueCondition>
                                  <SimulationTimeCondition value="4" rule="greaterThan"/>
                               </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="VisibilityHideEvent" priority="parallel">
                     <Action name="VisibilityHideAction">
                        <PrivateAction>
                           <VisibilityAction graphics="false" sensors="true" />
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="VisibilityHideCondition" delay="0.0" conditionEdge="rising">
                               <ByValueCondition>
                                  <SimulationTimeCondition value="7" rule="greaterThan"/>
                               </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="VisibilityReappearEvent" priority="parallel">
                     <Action name="VisibilityReappearAction">
                        <PrivateAction>
                           <VisibilityAction graphics="true" sensors="true" />
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="VisibilityReappearCondition" delay="0.0" conditionEdge="rising">
                               <ByValueCondition>
                                  <SimulationTimeCondition value="10" rule="greaterThan"/>
                               </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>                  
               </Maneuver>
            </ManeuverGroup>
            <StartTrigger>
               <ConditionGroup>
                  <Condition name="CutInActStart" delay="0">
                     <ByValueCondition>
                        <SimulationTimeCondition value="0" rule="greaterThan"/>
                     </ByValueCondition>
                  </Condition>
               </ConditionGroup>
            </StartTrigger>
            <StopTrigger>
                <ConditionGroup>
                   <Condition name="ActStopCondition" delay="5" conditionEdge="rising">
                      <ByValueCondition>
                         <StoryboardElementStateCondition storyboardElementType="event"
                                                          storyboardElementRef="OvertakerBrakeEvent"
                                                          state="endTransition"/>
                      </ByValueCondition>
                   </Condition>
                </ConditionGroup>
            </StopTrigger>
         </Act>
      </Story>
   </Storyboard>
</OpenSCENARIO>
